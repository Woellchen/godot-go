package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewInputEventMouseFromPointer(ptr gdnative.Pointer) InputEventMouse {
func newInputEventMouseFromPointer(ptr gdnative.Pointer) InputEventMouse {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := InputEventMouse{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Stores general mouse events information.
*/
type InputEventMouse struct {
	InputEventWithModifiers
	owner gdnative.Object
}

func (o *InputEventMouse) BaseClass() string {
	return "InputEventMouse"
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *InputEventMouse) GetButtonMask() gdnative.Int {
	//log.Println("Calling InputEventMouse.GetButtonMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "get_button_mask")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector2
*/
func (o *InputEventMouse) GetGlobalPosition() gdnative.Vector2 {
	//log.Println("Calling InputEventMouse.GetGlobalPosition()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "get_global_position")

	// Call the parent method.
	// Vector2
	retPtr := gdnative.NewEmptyVector2()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector2FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector2
*/
func (o *InputEventMouse) GetPosition() gdnative.Vector2 {
	//log.Println("Calling InputEventMouse.GetPosition()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "get_position")

	// Call the parent method.
	// Vector2
	retPtr := gdnative.NewEmptyVector2()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector2FromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false button_mask int}], Returns: void
*/
func (o *InputEventMouse) SetButtonMask(buttonMask gdnative.Int) {
	//log.Println("Calling InputEventMouse.SetButtonMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(buttonMask)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "set_button_mask")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false global_position Vector2}], Returns: void
*/
func (o *InputEventMouse) SetGlobalPosition(globalPosition gdnative.Vector2) {
	//log.Println("Calling InputEventMouse.SetGlobalPosition()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector2(globalPosition)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "set_global_position")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false position Vector2}], Returns: void
*/
func (o *InputEventMouse) SetPosition(position gdnative.Vector2) {
	//log.Println("Calling InputEventMouse.SetPosition()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector2(position)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventMouse", "set_position")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// InputEventMouseImplementer is an interface that implements the methods
// of the InputEventMouse class.
type InputEventMouseImplementer interface {
	InputEventWithModifiersImplementer
	GetButtonMask() gdnative.Int
	GetGlobalPosition() gdnative.Vector2
	GetPosition() gdnative.Vector2
	SetButtonMask(buttonMask gdnative.Int)
	SetGlobalPosition(globalPosition gdnative.Vector2)
	SetPosition(position gdnative.Vector2)
}
