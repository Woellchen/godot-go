package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// VisualScriptBuiltinFuncBuiltinFunc is an enum for BuiltinFunc values.
type VisualScriptBuiltinFuncBuiltinFunc int

const (
	VisualScriptBuiltinFuncBytesToVar          VisualScriptBuiltinFuncBuiltinFunc = 62
	VisualScriptBuiltinFuncColorn              VisualScriptBuiltinFuncBuiltinFunc = 63
	VisualScriptBuiltinFuncFuncFuncref         VisualScriptBuiltinFuncBuiltinFunc = 50
	VisualScriptBuiltinFuncFuncMax             VisualScriptBuiltinFuncBuiltinFunc = 68
	VisualScriptBuiltinFuncLogicClamp          VisualScriptBuiltinFuncBuiltinFunc = 47
	VisualScriptBuiltinFuncLogicMax            VisualScriptBuiltinFuncBuiltinFunc = 45
	VisualScriptBuiltinFuncLogicMin            VisualScriptBuiltinFuncBuiltinFunc = 46
	VisualScriptBuiltinFuncLogicNearestPo2     VisualScriptBuiltinFuncBuiltinFunc = 48
	VisualScriptBuiltinFuncMathAbs             VisualScriptBuiltinFuncBuiltinFunc = 16
	VisualScriptBuiltinFuncMathAcos            VisualScriptBuiltinFuncBuiltinFunc = 7
	VisualScriptBuiltinFuncMathAsin            VisualScriptBuiltinFuncBuiltinFunc = 6
	VisualScriptBuiltinFuncMathAtan            VisualScriptBuiltinFuncBuiltinFunc = 8
	VisualScriptBuiltinFuncMathAtan2           VisualScriptBuiltinFuncBuiltinFunc = 9
	VisualScriptBuiltinFuncMathCartesian2Polar VisualScriptBuiltinFuncBuiltinFunc = 42
	VisualScriptBuiltinFuncMathCeil            VisualScriptBuiltinFuncBuiltinFunc = 14
	VisualScriptBuiltinFuncMathCos             VisualScriptBuiltinFuncBuiltinFunc = 1
	VisualScriptBuiltinFuncMathCosh            VisualScriptBuiltinFuncBuiltinFunc = 4
	VisualScriptBuiltinFuncMathDb2Linear       VisualScriptBuiltinFuncBuiltinFunc = 40
	VisualScriptBuiltinFuncMathDecimals        VisualScriptBuiltinFuncBuiltinFunc = 24
	VisualScriptBuiltinFuncMathDectime         VisualScriptBuiltinFuncBuiltinFunc = 30
	VisualScriptBuiltinFuncMathDeg2Rad         VisualScriptBuiltinFuncBuiltinFunc = 37
	VisualScriptBuiltinFuncMathEase            VisualScriptBuiltinFuncBuiltinFunc = 23
	VisualScriptBuiltinFuncMathExp             VisualScriptBuiltinFuncBuiltinFunc = 20
	VisualScriptBuiltinFuncMathFloor           VisualScriptBuiltinFuncBuiltinFunc = 13
	VisualScriptBuiltinFuncMathFmod            VisualScriptBuiltinFuncBuiltinFunc = 11
	VisualScriptBuiltinFuncMathFposmod         VisualScriptBuiltinFuncBuiltinFunc = 12
	VisualScriptBuiltinFuncMathInverseLerp     VisualScriptBuiltinFuncBuiltinFunc = 27
	VisualScriptBuiltinFuncMathIsinf           VisualScriptBuiltinFuncBuiltinFunc = 22
	VisualScriptBuiltinFuncMathIsnan           VisualScriptBuiltinFuncBuiltinFunc = 21
	VisualScriptBuiltinFuncMathLerp            VisualScriptBuiltinFuncBuiltinFunc = 26
	VisualScriptBuiltinFuncMathLerpAngle       VisualScriptBuiltinFuncBuiltinFunc = 66
	VisualScriptBuiltinFuncMathLinear2Db       VisualScriptBuiltinFuncBuiltinFunc = 39
	VisualScriptBuiltinFuncMathLog             VisualScriptBuiltinFuncBuiltinFunc = 19
	VisualScriptBuiltinFuncMathMoveToward      VisualScriptBuiltinFuncBuiltinFunc = 29
	VisualScriptBuiltinFuncMathPolar2Cartesian VisualScriptBuiltinFuncBuiltinFunc = 41
	VisualScriptBuiltinFuncMathPosmod          VisualScriptBuiltinFuncBuiltinFunc = 65
	VisualScriptBuiltinFuncMathPow             VisualScriptBuiltinFuncBuiltinFunc = 18
	VisualScriptBuiltinFuncMathRad2Deg         VisualScriptBuiltinFuncBuiltinFunc = 38
	VisualScriptBuiltinFuncMathRand            VisualScriptBuiltinFuncBuiltinFunc = 32
	VisualScriptBuiltinFuncMathRandf           VisualScriptBuiltinFuncBuiltinFunc = 33
	VisualScriptBuiltinFuncMathRandom          VisualScriptBuiltinFuncBuiltinFunc = 34
	VisualScriptBuiltinFuncMathRandomize       VisualScriptBuiltinFuncBuiltinFunc = 31
	VisualScriptBuiltinFuncMathRandseed        VisualScriptBuiltinFuncBuiltinFunc = 36
	VisualScriptBuiltinFuncMathRangeLerp       VisualScriptBuiltinFuncBuiltinFunc = 28
	VisualScriptBuiltinFuncMathRound           VisualScriptBuiltinFuncBuiltinFunc = 15
	VisualScriptBuiltinFuncMathSeed            VisualScriptBuiltinFuncBuiltinFunc = 35
	VisualScriptBuiltinFuncMathSign            VisualScriptBuiltinFuncBuiltinFunc = 17
	VisualScriptBuiltinFuncMathSin             VisualScriptBuiltinFuncBuiltinFunc = 0
	VisualScriptBuiltinFuncMathSinh            VisualScriptBuiltinFuncBuiltinFunc = 3
	VisualScriptBuiltinFuncMathSmoothstep      VisualScriptBuiltinFuncBuiltinFunc = 64
	VisualScriptBuiltinFuncMathSqrt            VisualScriptBuiltinFuncBuiltinFunc = 10
	VisualScriptBuiltinFuncMathStepify         VisualScriptBuiltinFuncBuiltinFunc = 25
	VisualScriptBuiltinFuncMathTan             VisualScriptBuiltinFuncBuiltinFunc = 2
	VisualScriptBuiltinFuncMathTanh            VisualScriptBuiltinFuncBuiltinFunc = 5
	VisualScriptBuiltinFuncMathWrap            VisualScriptBuiltinFuncBuiltinFunc = 43
	VisualScriptBuiltinFuncMathWrapf           VisualScriptBuiltinFuncBuiltinFunc = 44
	VisualScriptBuiltinFuncObjWeakref          VisualScriptBuiltinFuncBuiltinFunc = 49
	VisualScriptBuiltinFuncStrToVar            VisualScriptBuiltinFuncBuiltinFunc = 60
	VisualScriptBuiltinFuncTextChar            VisualScriptBuiltinFuncBuiltinFunc = 54
	VisualScriptBuiltinFuncTextOrd             VisualScriptBuiltinFuncBuiltinFunc = 67
	VisualScriptBuiltinFuncTextPrint           VisualScriptBuiltinFuncBuiltinFunc = 56
	VisualScriptBuiltinFuncTextPrinterr        VisualScriptBuiltinFuncBuiltinFunc = 57
	VisualScriptBuiltinFuncTextPrintraw        VisualScriptBuiltinFuncBuiltinFunc = 58
	VisualScriptBuiltinFuncTextStr             VisualScriptBuiltinFuncBuiltinFunc = 55
	VisualScriptBuiltinFuncTypeConvert         VisualScriptBuiltinFuncBuiltinFunc = 51
	VisualScriptBuiltinFuncTypeExists          VisualScriptBuiltinFuncBuiltinFunc = 53
	VisualScriptBuiltinFuncTypeOf              VisualScriptBuiltinFuncBuiltinFunc = 52
	VisualScriptBuiltinFuncVarToBytes          VisualScriptBuiltinFuncBuiltinFunc = 61
	VisualScriptBuiltinFuncVarToStr            VisualScriptBuiltinFuncBuiltinFunc = 59
)

//func NewVisualScriptBuiltinFuncFromPointer(ptr gdnative.Pointer) VisualScriptBuiltinFunc {
func newVisualScriptBuiltinFuncFromPointer(ptr gdnative.Pointer) VisualScriptBuiltinFunc {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualScriptBuiltinFunc{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type VisualScriptBuiltinFunc struct {
	VisualScriptNode
	owner gdnative.Object
}

func (o *VisualScriptBuiltinFunc) BaseClass() string {
	return "VisualScriptBuiltinFunc"
}

/*
        Undocumented
	Args: [], Returns: enum.VisualScriptBuiltinFunc::BuiltinFunc
*/
func (o *VisualScriptBuiltinFunc) GetFunc() VisualScriptBuiltinFuncBuiltinFunc {
	//log.Println("Calling VisualScriptBuiltinFunc.GetFunc()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptBuiltinFunc", "get_func")

	// Call the parent method.
	// enum.VisualScriptBuiltinFunc::BuiltinFunc
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return VisualScriptBuiltinFuncBuiltinFunc(ret)
}

/*
        Undocumented
	Args: [{ false which int}], Returns: void
*/
func (o *VisualScriptBuiltinFunc) SetFunc(which gdnative.Int) {
	//log.Println("Calling VisualScriptBuiltinFunc.SetFunc()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(which)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptBuiltinFunc", "set_func")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualScriptBuiltinFuncImplementer is an interface that implements the methods
// of the VisualScriptBuiltinFunc class.
type VisualScriptBuiltinFuncImplementer interface {
	VisualScriptNodeImplementer
	SetFunc(which gdnative.Int)
}
