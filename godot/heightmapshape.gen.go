package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewHeightMapShapeFromPointer(ptr gdnative.Pointer) HeightMapShape {
func newHeightMapShapeFromPointer(ptr gdnative.Pointer) HeightMapShape {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := HeightMapShape{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Height map shape resource, which can be added to a [PhysicsBody] or [Area].
*/
type HeightMapShape struct {
	Shape
	owner gdnative.Object
}

func (o *HeightMapShape) BaseClass() string {
	return "HeightMapShape"
}

/*
        Undocumented
	Args: [], Returns: PoolRealArray
*/
func (o *HeightMapShape) GetMapData() gdnative.PoolRealArray {
	// log.Println("Calling HeightMapShape.GetMapData()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "get_map_data")

	// Call the parent method.
	// PoolRealArray
	retPtr := gdnative.NewEmptyPoolRealArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewPoolRealArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *HeightMapShape) GetMapDepth() gdnative.Int {
	// log.Println("Calling HeightMapShape.GetMapDepth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "get_map_depth")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *HeightMapShape) GetMapWidth() gdnative.Int {
	// log.Println("Calling HeightMapShape.GetMapWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "get_map_width")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false data PoolRealArray}], Returns: void
*/
func (o *HeightMapShape) SetMapData(data gdnative.PoolRealArray) {
	// log.Println("Calling HeightMapShape.SetMapData()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolRealArray(data)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "set_map_data")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false height int}], Returns: void
*/
func (o *HeightMapShape) SetMapDepth(height gdnative.Int) {
	// log.Println("Calling HeightMapShape.SetMapDepth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(height)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "set_map_depth")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false width int}], Returns: void
*/
func (o *HeightMapShape) SetMapWidth(width gdnative.Int) {
	// log.Println("Calling HeightMapShape.SetMapWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(width)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("HeightMapShape", "set_map_width")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// HeightMapShapeImplementer is an interface that implements the methods
// of the HeightMapShape class.
type HeightMapShapeImplementer interface {
	ShapeImplementer
	GetMapData() gdnative.PoolRealArray
	GetMapDepth() gdnative.Int
	GetMapWidth() gdnative.Int
	SetMapData(data gdnative.PoolRealArray)
	SetMapDepth(height gdnative.Int)
	SetMapWidth(width gdnative.Int)
}
