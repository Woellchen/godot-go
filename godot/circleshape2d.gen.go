package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewCircleShape2DFromPointer(ptr gdnative.Pointer) CircleShape2D {
func newCircleShape2DFromPointer(ptr gdnative.Pointer) CircleShape2D {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := CircleShape2D{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Circular shape for 2D collisions. This shape is useful for modeling balls or small characters and its collision detection with everything else is very fast.
*/
type CircleShape2D struct {
	Shape2D
	owner gdnative.Object
}

func (o *CircleShape2D) BaseClass() string {
	return "CircleShape2D"
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *CircleShape2D) GetRadius() gdnative.Real {
	// log.Println("Calling CircleShape2D.GetRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CircleShape2D", "get_radius")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false radius float}], Returns: void
*/
func (o *CircleShape2D) SetRadius(radius gdnative.Real) {
	// log.Println("Calling CircleShape2D.SetRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(radius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CircleShape2D", "set_radius")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// CircleShape2DImplementer is an interface that implements the methods
// of the CircleShape2D class.
type CircleShape2DImplementer interface {
	Shape2DImplementer
	GetRadius() gdnative.Real
	SetRadius(radius gdnative.Real)
}
