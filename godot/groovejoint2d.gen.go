package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewGrooveJoint2DFromPointer(ptr gdnative.Pointer) GrooveJoint2D {
func newGrooveJoint2DFromPointer(ptr gdnative.Pointer) GrooveJoint2D {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := GrooveJoint2D{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Groove constraint for 2D physics. This is useful for making a body "slide" through a segment placed in another.
*/
type GrooveJoint2D struct {
	Joint2D
	owner gdnative.Object
}

func (o *GrooveJoint2D) BaseClass() string {
	return "GrooveJoint2D"
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GrooveJoint2D) GetInitialOffset() gdnative.Real {
	// log.Println("Calling GrooveJoint2D.GetInitialOffset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GrooveJoint2D", "get_initial_offset")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GrooveJoint2D) GetLength() gdnative.Real {
	// log.Println("Calling GrooveJoint2D.GetLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GrooveJoint2D", "get_length")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false offset float}], Returns: void
*/
func (o *GrooveJoint2D) SetInitialOffset(offset gdnative.Real) {
	// log.Println("Calling GrooveJoint2D.SetInitialOffset()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(offset)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GrooveJoint2D", "set_initial_offset")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false length float}], Returns: void
*/
func (o *GrooveJoint2D) SetLength(length gdnative.Real) {
	// log.Println("Calling GrooveJoint2D.SetLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(length)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GrooveJoint2D", "set_length")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// GrooveJoint2DImplementer is an interface that implements the methods
// of the GrooveJoint2D class.
type GrooveJoint2DImplementer interface {
	Joint2DImplementer
	GetInitialOffset() gdnative.Real
	GetLength() gdnative.Real
	SetInitialOffset(offset gdnative.Real)
	SetLength(length gdnative.Real)
}
