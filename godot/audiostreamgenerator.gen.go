package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewAudioStreamGeneratorFromPointer(ptr gdnative.Pointer) AudioStreamGenerator {
func newAudioStreamGeneratorFromPointer(ptr gdnative.Pointer) AudioStreamGenerator {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := AudioStreamGenerator{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type AudioStreamGenerator struct {
	AudioStream
	owner gdnative.Object
}

func (o *AudioStreamGenerator) BaseClass() string {
	return "AudioStreamGenerator"
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *AudioStreamGenerator) GetBufferLength() gdnative.Real {
	// log.Println("Calling AudioStreamGenerator.GetBufferLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioStreamGenerator", "get_buffer_length")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *AudioStreamGenerator) GetMixRate() gdnative.Real {
	// log.Println("Calling AudioStreamGenerator.GetMixRate()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioStreamGenerator", "get_mix_rate")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyReal()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRealFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false seconds float}], Returns: void
*/
func (o *AudioStreamGenerator) SetBufferLength(seconds gdnative.Real) {
	// log.Println("Calling AudioStreamGenerator.SetBufferLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(seconds)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioStreamGenerator", "set_buffer_length")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false hz float}], Returns: void
*/
func (o *AudioStreamGenerator) SetMixRate(hz gdnative.Real) {
	// log.Println("Calling AudioStreamGenerator.SetMixRate()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromReal(hz)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioStreamGenerator", "set_mix_rate")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// AudioStreamGeneratorImplementer is an interface that implements the methods
// of the AudioStreamGenerator class.
type AudioStreamGeneratorImplementer interface {
	AudioStreamImplementer
	GetBufferLength() gdnative.Real
	GetMixRate() gdnative.Real
	SetBufferLength(seconds gdnative.Real)
	SetMixRate(hz gdnative.Real)
}
