package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewStreamPeerBufferFromPointer(ptr gdnative.Pointer) StreamPeerBuffer {
func newStreamPeerBufferFromPointer(ptr gdnative.Pointer) StreamPeerBuffer {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := StreamPeerBuffer{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type StreamPeerBuffer struct {
	StreamPeer
	owner gdnative.Object
}

func (o *StreamPeerBuffer) BaseClass() string {
	return "StreamPeerBuffer"
}

/*

	Args: [], Returns: void
*/
func (o *StreamPeerBuffer) Clear() {
	//log.Println("Calling StreamPeerBuffer.Clear()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "clear")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [], Returns: StreamPeerBuffer
*/
func (o *StreamPeerBuffer) Duplicate() StreamPeerBufferImplementer {
	//log.Println("Calling StreamPeerBuffer.Duplicate()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "duplicate")

	// Call the parent method.
	// StreamPeerBuffer
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := newStreamPeerBufferFromPointer(retPtr)

	// Check to see if we already have an instance of this object in our Go instance registry.
	if instance, ok := InstanceRegistry.Get(ret.GetBaseObject().ID()); ok {
		return instance.(StreamPeerBufferImplementer)
	}

	// Check to see what kind of class this is and create it. This is generally used with
	// GetNode().
	className := ret.GetClass()
	if className != "StreamPeerBuffer" {
		actualRet := getActualClass(className, ret.GetBaseObject())
		return actualRet.(StreamPeerBufferImplementer)
	}

	return &ret
}

/*
        Undocumented
	Args: [], Returns: PoolByteArray
*/
func (o *StreamPeerBuffer) GetDataArray() gdnative.PoolByteArray {
	//log.Println("Calling StreamPeerBuffer.GetDataArray()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "get_data_array")

	// Call the parent method.
	// PoolByteArray
	retPtr := gdnative.NewEmptyPoolByteArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewPoolByteArrayFromPointer(retPtr)
	return ret
}

/*

	Args: [], Returns: int
*/
func (o *StreamPeerBuffer) GetPosition() gdnative.Int {
	//log.Println("Calling StreamPeerBuffer.GetPosition()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "get_position")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*

	Args: [], Returns: int
*/
func (o *StreamPeerBuffer) GetSize() gdnative.Int {
	//log.Println("Calling StreamPeerBuffer.GetSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "get_size")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*

	Args: [{ false size int}], Returns: void
*/
func (o *StreamPeerBuffer) Resize(size gdnative.Int) {
	//log.Println("Calling StreamPeerBuffer.Resize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(size)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "resize")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false position int}], Returns: void
*/
func (o *StreamPeerBuffer) Seek(position gdnative.Int) {
	//log.Println("Calling StreamPeerBuffer.Seek()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(position)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "seek")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false data PoolByteArray}], Returns: void
*/
func (o *StreamPeerBuffer) SetDataArray(data gdnative.PoolByteArray) {
	//log.Println("Calling StreamPeerBuffer.SetDataArray()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolByteArray(data)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("StreamPeerBuffer", "set_data_array")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// StreamPeerBufferImplementer is an interface that implements the methods
// of the StreamPeerBuffer class.
type StreamPeerBufferImplementer interface {
	StreamPeerImplementer
	Clear()
	Duplicate() StreamPeerBufferImplementer
	GetDataArray() gdnative.PoolByteArray
	GetPosition() gdnative.Int
	GetSize() gdnative.Int
	Resize(size gdnative.Int)
	Seek(position gdnative.Int)
	SetDataArray(data gdnative.PoolByteArray)
}
