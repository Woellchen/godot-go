package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// WebRTCDataChannelChannelState is an enum for ChannelState values.
type WebRTCDataChannelChannelState int

const (
	WebRTCDataChannelStateClosed     WebRTCDataChannelChannelState = 3
	WebRTCDataChannelStateClosing    WebRTCDataChannelChannelState = 2
	WebRTCDataChannelStateConnecting WebRTCDataChannelChannelState = 0
	WebRTCDataChannelStateOpen       WebRTCDataChannelChannelState = 1
)

// WebRTCDataChannelWriteMode is an enum for WriteMode values.
type WebRTCDataChannelWriteMode int

const (
	WebRTCDataChannelWriteModeBinary WebRTCDataChannelWriteMode = 1
	WebRTCDataChannelWriteModeText   WebRTCDataChannelWriteMode = 0
)

//func NewWebRTCDataChannelFromPointer(ptr gdnative.Pointer) WebRTCDataChannel {
func newWebRTCDataChannelFromPointer(ptr gdnative.Pointer) WebRTCDataChannel {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := WebRTCDataChannel{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type WebRTCDataChannel struct {
	PacketPeer
	owner gdnative.Object
}

func (o *WebRTCDataChannel) BaseClass() string {
	return "WebRTCDataChannel"
}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *WebRTCDataChannel) Close() {
	//log.Println("Calling WebRTCDataChannel.Close()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "close")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *WebRTCDataChannel) GetId() gdnative.Int {
	//log.Println("Calling WebRTCDataChannel.GetId()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_id")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *WebRTCDataChannel) GetLabel() gdnative.String {
	//log.Println("Calling WebRTCDataChannel.GetLabel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_label")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *WebRTCDataChannel) GetMaxPacketLifeTime() gdnative.Int {
	//log.Println("Calling WebRTCDataChannel.GetMaxPacketLifeTime()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_max_packet_life_time")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *WebRTCDataChannel) GetMaxRetransmits() gdnative.Int {
	//log.Println("Calling WebRTCDataChannel.GetMaxRetransmits()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_max_retransmits")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *WebRTCDataChannel) GetProtocol() gdnative.String {
	//log.Println("Calling WebRTCDataChannel.GetProtocol()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_protocol")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.WebRTCDataChannel::ChannelState
*/
func (o *WebRTCDataChannel) GetReadyState() WebRTCDataChannelChannelState {
	//log.Println("Calling WebRTCDataChannel.GetReadyState()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_ready_state")

	// Call the parent method.
	// enum.WebRTCDataChannel::ChannelState
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return WebRTCDataChannelChannelState(ret)
}

/*
        Undocumented
	Args: [], Returns: enum.WebRTCDataChannel::WriteMode
*/
func (o *WebRTCDataChannel) GetWriteMode() WebRTCDataChannelWriteMode {
	//log.Println("Calling WebRTCDataChannel.GetWriteMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "get_write_mode")

	// Call the parent method.
	// enum.WebRTCDataChannel::WriteMode
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return WebRTCDataChannelWriteMode(ret)
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *WebRTCDataChannel) IsNegotiated() gdnative.Bool {
	//log.Println("Calling WebRTCDataChannel.IsNegotiated()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "is_negotiated")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *WebRTCDataChannel) IsOrdered() gdnative.Bool {
	//log.Println("Calling WebRTCDataChannel.IsOrdered()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "is_ordered")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: enum.Error
*/
func (o *WebRTCDataChannel) Poll() gdnative.Error {
	//log.Println("Calling WebRTCDataChannel.Poll()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "poll")

	// Call the parent method.
	// enum.Error
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return gdnative.Error(ret)
}

/*
        Undocumented
	Args: [{ false write_mode int}], Returns: void
*/
func (o *WebRTCDataChannel) SetWriteMode(writeMode gdnative.Int) {
	//log.Println("Calling WebRTCDataChannel.SetWriteMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(writeMode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "set_write_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *WebRTCDataChannel) WasStringPacket() gdnative.Bool {
	//log.Println("Calling WebRTCDataChannel.WasStringPacket()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebRTCDataChannel", "was_string_packet")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	return ret
}

// WebRTCDataChannelImplementer is an interface that implements the methods
// of the WebRTCDataChannel class.
type WebRTCDataChannelImplementer interface {
	PacketPeerImplementer
	Close()
	GetId() gdnative.Int
	GetLabel() gdnative.String
	GetMaxPacketLifeTime() gdnative.Int
	GetMaxRetransmits() gdnative.Int
	GetProtocol() gdnative.String
	IsNegotiated() gdnative.Bool
	IsOrdered() gdnative.Bool
	SetWriteMode(writeMode gdnative.Int)
	WasStringPacket() gdnative.Bool
}
