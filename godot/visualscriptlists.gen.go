package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewVisualScriptListsFromPointer(ptr gdnative.Pointer) VisualScriptLists {
func newVisualScriptListsFromPointer(ptr gdnative.Pointer) VisualScriptLists {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualScriptLists{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type VisualScriptLists struct {
	VisualScriptNode
	owner gdnative.Object
}

func (o *VisualScriptLists) BaseClass() string {
	return "VisualScriptLists"
}

/*
        Undocumented
	Args: [{ false type int} { false name String} { false index int}], Returns: void
*/
func (o *VisualScriptLists) AddInputDataPort(aType gdnative.Int, name gdnative.String, index gdnative.Int) {
	//log.Println("Calling VisualScriptLists.AddInputDataPort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromInt(aType)
	ptrArguments[1] = gdnative.NewPointerFromString(name)
	ptrArguments[2] = gdnative.NewPointerFromInt(index)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "add_input_data_port")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false type int} { false name String} { false index int}], Returns: void
*/
func (o *VisualScriptLists) AddOutputDataPort(aType gdnative.Int, name gdnative.String, index gdnative.Int) {
	//log.Println("Calling VisualScriptLists.AddOutputDataPort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 3, 3)
	ptrArguments[0] = gdnative.NewPointerFromInt(aType)
	ptrArguments[1] = gdnative.NewPointerFromString(name)
	ptrArguments[2] = gdnative.NewPointerFromInt(index)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "add_output_data_port")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int}], Returns: void
*/
func (o *VisualScriptLists) RemoveInputDataPort(index gdnative.Int) {
	//log.Println("Calling VisualScriptLists.RemoveInputDataPort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "remove_input_data_port")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int}], Returns: void
*/
func (o *VisualScriptLists) RemoveOutputDataPort(index gdnative.Int) {
	//log.Println("Calling VisualScriptLists.RemoveOutputDataPort()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "remove_output_data_port")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int} { false name String}], Returns: void
*/
func (o *VisualScriptLists) SetInputDataPortName(index gdnative.Int, name gdnative.String) {
	//log.Println("Calling VisualScriptLists.SetInputDataPortName()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)
	ptrArguments[1] = gdnative.NewPointerFromString(name)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "set_input_data_port_name")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int} { false type int}], Returns: void
*/
func (o *VisualScriptLists) SetInputDataPortType(index gdnative.Int, aType gdnative.Int) {
	//log.Println("Calling VisualScriptLists.SetInputDataPortType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)
	ptrArguments[1] = gdnative.NewPointerFromInt(aType)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "set_input_data_port_type")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int} { false name String}], Returns: void
*/
func (o *VisualScriptLists) SetOutputDataPortName(index gdnative.Int, name gdnative.String) {
	//log.Println("Calling VisualScriptLists.SetOutputDataPortName()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)
	ptrArguments[1] = gdnative.NewPointerFromString(name)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "set_output_data_port_name")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false index int} { false type int}], Returns: void
*/
func (o *VisualScriptLists) SetOutputDataPortType(index gdnative.Int, aType gdnative.Int) {
	//log.Println("Calling VisualScriptLists.SetOutputDataPortType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromInt(index)
	ptrArguments[1] = gdnative.NewPointerFromInt(aType)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptLists", "set_output_data_port_type")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualScriptListsImplementer is an interface that implements the methods
// of the VisualScriptLists class.
type VisualScriptListsImplementer interface {
	VisualScriptNodeImplementer
	AddInputDataPort(aType gdnative.Int, name gdnative.String, index gdnative.Int)
	AddOutputDataPort(aType gdnative.Int, name gdnative.String, index gdnative.Int)
	RemoveInputDataPort(index gdnative.Int)
	RemoveOutputDataPort(index gdnative.Int)
	SetInputDataPortName(index gdnative.Int, name gdnative.String)
	SetInputDataPortType(index gdnative.Int, aType gdnative.Int)
	SetOutputDataPortName(index gdnative.Int, name gdnative.String)
	SetOutputDataPortType(index gdnative.Int, aType gdnative.Int)
}
