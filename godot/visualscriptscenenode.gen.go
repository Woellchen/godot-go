package godot

import (
	"github.com/Woellchen/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewVisualScriptSceneNodeFromPointer(ptr gdnative.Pointer) VisualScriptSceneNode {
func newVisualScriptSceneNodeFromPointer(ptr gdnative.Pointer) VisualScriptSceneNode {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualScriptSceneNode{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type VisualScriptSceneNode struct {
	VisualScriptNode
	owner gdnative.Object
}

func (o *VisualScriptSceneNode) BaseClass() string {
	return "VisualScriptSceneNode"
}

/*
        Undocumented
	Args: [], Returns: NodePath
*/
func (o *VisualScriptSceneNode) GetNodePath() gdnative.NodePath {
	// log.Println("Calling VisualScriptSceneNode.GetNodePath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptSceneNode", "get_node_path")

	// Call the parent method.
	// NodePath
	retPtr := gdnative.NewEmptyNodePath()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewNodePathFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false path NodePath}], Returns: void
*/
func (o *VisualScriptSceneNode) SetNodePath(path gdnative.NodePath) {
	// log.Println("Calling VisualScriptSceneNode.SetNodePath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromNodePath(path)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptSceneNode", "set_node_path")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualScriptSceneNodeImplementer is an interface that implements the methods
// of the VisualScriptSceneNode class.
type VisualScriptSceneNodeImplementer interface {
	VisualScriptNodeImplementer
	GetNodePath() gdnative.NodePath
	SetNodePath(path gdnative.NodePath)
}
